{"version":3,"file":"static/js/515.3bf96c83.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.js","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.js","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","pages/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formBox\":\"ContactForm_formBox__cXiHe\",\"formInputBox\":\"ContactForm_formInputBox__E8z5f\",\"sectionTitle\":\"ContactForm_sectionTitle__Cys7N\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { selectUserContacts } from 'redux/selectors';\nimport { addContactThunk } from 'redux/operations';\nimport styles from './ContactForm.module.css';\n\nconst ContactForm = () => {\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectUserContacts);\n\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const form = event.currentTarget;\n\n    const name = form.elements.contactName.value;\n    const number = form.elements.contactNumber.value;\n\n    if (contacts.some(contact => contact.name === name))\n      return alert(`Contact with name ${name} already exists!`);\n\n    dispatch(addContactThunk({ name, number }));\n  };\n\n  return (\n    <div className={styles.formBox}>\n         <form onSubmit={handleSubmit}>\n        <div className={styles.formInputBox}>\n          <h3 className={styles.sectionTitle}>Input new contact information</h3>\n        <label>\n          <p>Name:</p>\n          <input name=\"contactName\" type=\"text\" required />\n        </label>\n        <br />\n        <label>\n          <p>Number:</p>\n          <input name=\"contactNumber\" type=\"text\" required />\n        </label>\n        </div>\n        <button type=\"submit\">Add contact</button>\n            </form>\n    </div>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsBox\":\"ContactList_contactsBox__H9Ugp\",\"sectionTitle\":\"ContactList_sectionTitle__mek9t\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { selectUserContacts, selectFilter } from 'redux/selectors';\nimport { deleteContactThunk } from 'redux/operations';\nimport styles from './ContactList.module.css';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectUserContacts);\n  const filter = useSelector(selectFilter);\n\n  const handleDeleteContact = contactId => {\n    dispatch(deleteContactThunk(contactId));\n  };\n\n  const showContacts = Array.isArray(contacts) && contacts.length > 0;\n\n  const filteredContacts = () => {\n    if (filter.length > 0) {\n      return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n      );\n    } else {\n      return contacts;\n    }\n  };\n\n  return (\n    <div className={styles.contactsBox}>\n      <h3 className={styles.sectionTitle}>Your contacts</h3>\n      <ul>\n        {showContacts &&\n          filteredContacts().map(contact => {\n            return (\n              <li key={contact.id}>\n                <h3>Name: {contact.name}</h3>\n                <p>Number: {contact.number}</p>\n                <button\n                  onClick={() => handleDeleteContact(contact.id)}\n                  type=\"button\"\n                  aria-label=\"Delete contact\"\n                >\n                  &times;\n                </button>\n              </li>\n            );\n          })}\n      </ul>\n    </div>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"filterBox\":\"Filter_filterBox__A-UPt\",\"sectionTitle\":\"Filter_sectionTitle__QSjyb\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { setStatusFilter } from 'redux/reducers/filterSlice';\nimport { selectFilter } from 'redux/selectors';\nimport React from 'react';\nimport styles from './Filter.module.css';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleChange = event => {\n    dispatch(setStatusFilter(event.target.value));\n  };\n\n  return (\n    <div className={styles.filterBox}>\n      <p className={styles.sectionTitle}>Find contact by name</p>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={handleChange}\n        placeholder=\"Search contact\"\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { requestContactsThunk } from 'redux/operations';\nimport { selectIsLoggedIn, selectContactsError, selectContactsIsLoading } from 'redux/selectors';\n\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList'\nimport Filter from '../components/Filter/Filter';\nimport Loader from 'components/Loader/Loader';\n\nconst Contacts = () => {\n  const authentificated = useSelector(selectIsLoggedIn);\n  const isLoading = useSelector(selectContactsIsLoading);\n  const error = useSelector(selectContactsError);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!authentificated) return;\n\n    dispatch(requestContactsThunk());\n  }, [authentificated, dispatch]);\n\n\n\n  return (\n    <section>\n      <ContactForm />\n      <Filter />\n      {isLoading && <Loader />}\n      {error && <p>Oops, some error occured... {error}</p>}\n     <ContactList />\n    </section>\n  );\n};\n\nexport default Contacts;\n"],"names":["dispatch","useDispatch","contacts","useSelector","selectUserContacts","_jsx","className","styles","children","_jsxs","onSubmit","event","preventDefault","form","currentTarget","name","elements","contactName","value","number","contactNumber","some","contact","alert","concat","addContactThunk","type","required","filter","selectFilter","showContacts","Array","isArray","length","toLowerCase","includes","map","onClick","contactId","id","deleteContactThunk","onChange","setStatusFilter","target","placeholder","authentificated","selectIsLoggedIn","isLoading","selectContactsIsLoading","error","selectContactsError","useEffect","requestContactsThunk","ContactForm","Filter","Loader","ContactList"],"sourceRoot":""}