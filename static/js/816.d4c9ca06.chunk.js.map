{"version":3,"file":"static/js/816.d4c9ca06.chunk.js","mappings":"0NACA,EAA8B,iCAA9B,EAA0E,8B,SC4C1E,EAtCoB,WAClB,IAAMA,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,IAAYC,EAAAA,IAC3BC,GAASF,EAAAA,EAAAA,IAAYG,EAAAA,KAM3BC,EAAAA,EAAAA,YAAU,WACRP,GAASQ,EAAAA,EAAAA,MACX,GAAG,CAACR,IAEJ,IAUMS,EATAJ,EAAOK,OAAS,EACXR,EAAaG,QAAO,SAAAM,GAAO,OAChCA,EAAQC,KAAKC,cAAcC,SAAST,EAAOQ,cAAc,IAGpDX,EAMX,OACEa,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAmBC,SAC/BT,EAAsBU,KAAI,SAAAR,GAAO,OAChCS,EAAAA,EAAAA,MAAA,MAAAF,SAAA,EACEE,EAAAA,EAAAA,MAAA,KAAGJ,UAAWC,EAAgBC,SAAA,CAAEP,EAAQC,KAAK,OAAM,KACnDG,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAgBC,SAAEP,EAAQU,UACxCN,EAAAA,EAAAA,KAAA,UAAQO,QAAS,kBA1BHC,EA0BuBZ,EAAQY,QAzBnDvB,GAASwB,EAAAA,EAAAA,IAAcD,IADH,IAAAA,CA0BkC,EAACL,SAAC,aAH3CP,EAAQY,GAIZ,KAIb,E,SC1CA,EAA6B,gCAA7B,EAAwE,8BCyExE,EApEoB,WAClB,IAAAE,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7Bb,EAAIe,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAA4BJ,EAAAA,EAAAA,UAAS,IAAGK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAAjCT,EAAMU,EAAA,GAAEC,EAASD,EAAA,GAElB/B,GAAWC,EAAAA,EAAAA,MACXgC,GAAW9B,EAAAA,EAAAA,IAAYC,EAAAA,IAEvB8B,EAAe,SAAAC,GACnB,IAAAC,EAAwBD,EAAEE,OAAlBzB,EAAIwB,EAAJxB,KAAM0B,EAAKF,EAALE,MACD,SAAT1B,EACFiB,EAAQS,GACU,WAAT1B,GACToB,EAAUM,EAEd,EAuBA,OACEvB,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAkBC,UAChCE,EAAAA,EAAAA,MAAA,QAAMmB,SAvBW,SAAAJ,GACnBA,EAAEK,iBACF,IAAMC,EAAa,CACjB7B,KAAAA,EACAS,OAAAA,GAGIqB,EAAkBT,EAASU,MAC/B,SAAAhC,GAAO,OAAIA,EAAQC,KAAKC,gBAAkB4B,EAAW7B,KAAKC,aAAa,IAGrE6B,EACFE,MAAM,GAADC,OAAIH,EAAgB9B,KAAI,8BAI/BZ,GAAS8C,EAAAA,EAAAA,IAAWL,IACpBZ,EAAQ,IACRG,EAAU,IACZ,EAIkChB,UAAWC,EAAgBC,SAAA,EACvDH,EAAAA,EAAAA,KAAA,SACEgC,KAAK,OACLnC,KAAK,OACLoC,YAAY,qBACZC,QAAQ,2HACRC,MAAM,yIACNC,UAAQ,EACRb,MAAO1B,EACPwC,SAAUlB,KAGZnB,EAAAA,EAAAA,KAAA,SACEgC,KAAK,MACLnC,KAAK,SACLoC,YAAY,uBACZC,QAAQ,qGACRC,MAAM,+FACNC,UAAQ,EACRb,MAAOjB,EACP+B,SAAUlB,KAGZnB,EAAAA,EAAAA,KAAA,UAAQgC,KAAK,SAAQ7B,SAAC,oBAI9B,E,QCvEA,EAA4B,0BAA5B,EAAoE,4BC2BpE,EAtBe,WACb,IAAMlB,GAAWC,EAAAA,EAAAA,MACXI,GAASF,EAAAA,EAAAA,IAAYG,EAAAA,IAM3B,OACEc,EAAAA,EAAAA,MAAA,OAAKJ,UAAWC,EAAiBC,SAAA,EAC/BH,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAmBC,SAAC,0BAClCH,EAAAA,EAAAA,KAAA,SACEgC,KAAK,OACLnC,KAAK,SACL0B,MAAOjC,EACP+C,SAXe,SAAAC,GACnBrD,GAASsD,EAAAA,EAAAA,GAAgBD,EAAMhB,OAAOC,OACxC,EAUMU,YAAY,qBAIpB,ECXA,EAVqB,WACnB,OACE5B,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACEH,EAAAA,EAAAA,KAACwC,EAAW,KACZxC,EAAAA,EAAAA,KAACyC,EAAM,KACPzC,EAAAA,EAAAA,KAAC0C,EAAW,MAGlB,C","sources":["webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.js","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","pages/ContactsPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contactsBox\":\"ContactList_contactsBox__H9Ugp\",\"listItem\":\"ContactList_listItem__SptUx\"};","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts, selectFilter } from 'redux/selectors';\nimport { fetchContacts, deleteContact } from 'redux/operations';\n\nimport styles from './ContactList.module.css';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const contactItems = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n  const removeContact = id => {\n    dispatch(deleteContact(id));\n  };\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const filteredContacts = () => {\n    if (filter.length > 0) {\n      return contactItems.filter(contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n      );\n    } else {\n      return contactItems;\n    }\n  };\n\n  const filteredContactsArray = filteredContacts();\n\n  return (\n    <ul className={styles.contactsBox}>\n      {filteredContactsArray.map(contact => (\n        <li key={contact.id}>\n          <p className={styles.listItem}>{contact.name}:</p>{' '}\n          <p className={styles.listItem}>{contact.number}</p>\n          <button onClick={() => removeContact(contact.id)}>Delete</button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"sectionBox\":\"ContactForm_sectionBox__9Rxb1\",\"inputBox\":\"ContactForm_inputBox__cnRUL\"};","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/selectors';\nimport { addContact } from 'redux/operations';\nimport styles from './ContactForm.module.css';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    if (name === 'name') {\n      setName(value);\n    } else if (name === 'number') {\n      setNumber(value);\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newContact = {\n      name,\n      number,\n    };\n\n    const existingContact = contacts.find(\n      contact => contact.name.toLowerCase() === newContact.name.toLowerCase()\n    );\n\n    if (existingContact) {\n      alert(`${existingContact.name} is already in contacts.`);\n      return;\n    }\n\n    dispatch(addContact(newContact));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <div className={styles.sectionBox}>\n      <form onSubmit={handleSubmit} className={styles.inputBox}>\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Enter your name...\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={handleChange}\n        />\n\n        <input\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"Enter your number...\"\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={handleChange}\n        />\n\n        <button type=\"submit\">Add Contact</button>\n      </form>\n    </div>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"filterBox\":\"Filter_filterBox__A-UPt\",\"filterTitle\":\"Filter_filterTitle__5SDqd\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { setStatusFilter } from 'redux/reducers/filterSlice';\nimport { selectFilter } from 'redux/selectors';\nimport React from 'react';\nimport styles from './Filter.module.css';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleChange = event => {\n    dispatch(setStatusFilter(event.target.value));\n  };\n\n  return (\n    <div className={styles.filterBox}>\n      <p className={styles.filterTitle}>Find contact by name</p>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={handleChange}\n        placeholder=\"Search contact\"\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\nimport ContactList from 'components/ContactList/ContactList';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\n\nconst ContactsPage = () => {\n  return (\n    <div>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["dispatch","useDispatch","contactItems","useSelector","selectContacts","filter","selectFilter","useEffect","fetchContacts","filteredContactsArray","length","contact","name","toLowerCase","includes","_jsx","className","styles","children","map","_jsxs","number","onClick","id","deleteContact","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","setNumber","contacts","handleChange","e","_e$target","target","value","onSubmit","preventDefault","newContact","existingContact","find","alert","concat","addContact","type","placeholder","pattern","title","required","onChange","event","setStatusFilter","ContactForm","Filter","ContactList"],"sourceRoot":""}