{"version":3,"file":"static/js/143.b9e9cf73.chunk.js","mappings":"gOACA,EAA4B,0BAA5B,EAAoE,4B,SC2BpE,EAtBe,WACb,IAAMA,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,IAAYC,EAAAA,IAM3B,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAiBC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,KAAGH,UAAWC,EAAmBC,SAAC,0BAClCC,EAAAA,EAAAA,KAAA,SACEC,KAAK,OACLC,KAAK,SACLC,MAAOV,EACPW,SAXe,SAAAC,GACnBd,GAASe,EAAAA,EAAAA,GAAgBD,EAAME,OAAOJ,OACxC,EAUMK,YAAY,qBAIpB,E,UCVA,EAbe,WACb,OACER,EAAAA,EAAAA,KAACS,EAAAA,GAAG,CACFC,SAAS,EACTC,OAAQ,GACRC,MAAO,GACPC,UAAU,cACVC,aAAc,CAAC,EACfC,iBAAiB,eAGvB,E,UC0FA,EAtFiB,WACf,IAAMC,GAAkBtB,EAAAA,EAAAA,IAAYuB,EAAAA,IAC9BC,GAAWxB,EAAAA,EAAAA,IAAYyB,EAAAA,IACvBC,GAAY1B,EAAAA,EAAAA,IAAY2B,EAAAA,IACxBC,GAAQ5B,EAAAA,EAAAA,IAAY6B,EAAAA,IACpB9B,GAASC,EAAAA,EAAAA,IAAYC,EAAAA,IAErBJ,GAAWC,EAAAA,EAAAA,OAEjBgC,EAAAA,EAAAA,YAAU,WACHR,GAELzB,GAASkC,EAAAA,EAAAA,MACX,GAAG,CAACT,EAAiBzB,IAErB,IAkBMmC,EAAeC,MAAMC,QAAQV,IAAaA,EAASW,OAAS,EAYlE,OACEjC,EAAAA,EAAAA,MAAA,WAAAG,SAAA,EACEH,EAAAA,EAAAA,MAAA,QAAMkC,SA5BW,SAAAzB,GACnBA,EAAM0B,iBAEN,IAAMC,EAAO3B,EAAM4B,cAEb/B,EAAO8B,EAAKE,SAASC,YAAYhC,MACjCiC,EAASJ,EAAKE,SAASG,cAAclC,MAE3C,GAAIe,EAASoB,MAAK,SAAAC,GAAO,OAAIA,EAAQrC,OAASA,CAAI,IAChD,OAAOsC,MAAM,qBAADC,OAAsBvC,EAAI,qBAExCX,GAASmD,EAAAA,EAAAA,IAAgB,CAAExC,KAAAA,EAAMkC,OAAAA,IACnC,EAgBiCrC,SAAA,EAC3BH,EAAAA,EAAAA,MAAA,SAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,WACHC,EAAAA,EAAAA,KAAA,SAAOE,KAAK,cAAcD,KAAK,OAAO0C,UAAQ,QAEhD3C,EAAAA,EAAAA,KAAA,UACAJ,EAAAA,EAAAA,MAAA,SAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,aACHC,EAAAA,EAAAA,KAAA,SAAOE,KAAK,gBAAgBD,KAAK,OAAO0C,UAAQ,QAElD3C,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAAQF,SAAC,oBAExBC,EAAAA,EAAAA,KAAC4C,EAAM,IAENxB,IAAapB,EAAAA,EAAAA,KAAC6C,EAAM,IACpBvB,IAAS1B,EAAAA,EAAAA,MAAA,KAAAG,SAAA,CAAG,+BAA6BuB,MAC1CtB,EAAAA,EAAAA,KAAA,MAAAD,SACG2B,IA7BDjC,EAAOoC,OAAS,EACXX,EAASzB,QAAO,SAAA8C,GAAO,OAC5BA,EAAQrC,KAAK4C,cAAcC,SAAStD,EAAOqD,cAAc,IAGpD5B,GAyBgB8B,KAAI,SAAAT,GACrB,OACE3C,EAAAA,EAAAA,MAAA,MAAAG,SAAA,EACEH,EAAAA,EAAAA,MAAA,MAAAG,SAAA,CAAI,SAAOwC,EAAQrC,SACnBN,EAAAA,EAAAA,MAAA,KAAAG,SAAA,CAAG,WAASwC,EAAQH,WACpBpC,EAAAA,EAAAA,KAAA,UACEiD,QAAS,kBAzDGC,EAyDuBX,EAAQY,QAxDzD5D,GAAS6D,EAAAA,EAAAA,IAAmBF,IADF,IAAAA,CAyDkC,EAC9CjD,KAAK,SACL,aAAW,iBAAgBF,SAC5B,WAPMwC,EAAQY,GAYrB,QAIV,C","sources":["webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","components/Loader/Loader.js","pages/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"filterBox\":\"Filter_filterBox__A-UPt\",\"filterTitle\":\"Filter_filterTitle__5SDqd\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { setStatusFilter } from 'redux/reducers/filterSlice';\nimport { selectFilter } from 'redux/selectors';\nimport React from 'react';\nimport styles from './Filter.module.css';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleChange = event => {\n    dispatch(setStatusFilter(event.target.value));\n  };\n\n  return (\n    <div className={styles.filterBox}>\n      <p className={styles.filterTitle}>Find contact by name</p>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={handleChange}\n        placeholder=\"Search contact\"\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\nimport { Dna } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <Dna\n      visible={true}\n      height={80}\n      width={80}\n      ariaLabel=\"dna-loading\"\n      wrapperStyle={{}}\n      wrapperClassName=\"dna-wrapper\"\n    />\n  );\n};\n\nexport default Loader;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Filter from '../components/Filter/Filter';\n// import { Button } from 'antd';\n\nimport Loader from 'components/Loader/Loader';\nimport { selectIsLoggedIn } from 'redux/selectors';\nimport {\n  addContactThunk,\n  deleteContactThunk,\n  requestContactsThunk,\n  selectContactsError,\n  selectContactsIsLoading,\n  selectUserContacts,\n} from 'redux/reducers/contactSlice';\n\nimport { selectFilter } from 'redux/selectors';\n\nconst Contacts = () => {\n  const authentificated = useSelector(selectIsLoggedIn);\n  const contacts = useSelector(selectUserContacts);\n  const isLoading = useSelector(selectContactsIsLoading);\n  const error = useSelector(selectContactsError);\n  const filter = useSelector(selectFilter);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!authentificated) return;\n\n    dispatch(requestContactsThunk());\n  }, [authentificated, dispatch]);\n\n  const handleDeleteContact = contactId => {\n    dispatch(deleteContactThunk(contactId));\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const form = event.currentTarget;\n\n    const name = form.elements.contactName.value;\n    const number = form.elements.contactNumber.value;\n\n    if (contacts.some(contact => contact.name === name))\n      return alert(`Contact with name ${name} already exists!`);\n\n    dispatch(addContactThunk({ name, number }));\n  };\n\n  const showContacts = Array.isArray(contacts) && contacts.length > 0;\n\n  const filteredContacts = () => {\n    if (filter.length > 0) {\n      return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n      );\n    } else {\n      return contacts;\n    }\n  };\n\n  return (\n    <section>\n      <form onSubmit={handleSubmit}>\n        <label>\n          <p>Name:</p>\n          <input name=\"contactName\" type=\"text\" required />\n        </label>\n        <br />\n        <label>\n          <p>Number:</p>\n          <input name=\"contactNumber\" type=\"text\" required />\n        </label>\n        <br />\n        <button type=\"submit\">Add contact</button>\n      </form>\n      <Filter />\n\n      {isLoading && <Loader />}\n      {error && <p>Oops, some error occured... {error}</p>}\n      <ul>\n        {showContacts &&\n          filteredContacts().map(contact => {\n            return (\n              <li key={contact.id}>\n                <h3>Name: {contact.name}</h3>\n                <p>Number: {contact.number}</p>\n                <button\n                  onClick={() => handleDeleteContact(contact.id)}\n                  type=\"button\"\n                  aria-label=\"Delete contact\"\n                >\n                  &times;\n                </button>\n              </li>\n            );\n          })}\n      </ul>\n    </section>\n  );\n};\n\nexport default Contacts;\n"],"names":["dispatch","useDispatch","filter","useSelector","selectFilter","_jsxs","className","styles","children","_jsx","type","name","value","onChange","event","setStatusFilter","target","placeholder","Dna","visible","height","width","ariaLabel","wrapperStyle","wrapperClassName","authentificated","selectIsLoggedIn","contacts","selectUserContacts","isLoading","selectContactsIsLoading","error","selectContactsError","useEffect","requestContactsThunk","showContacts","Array","isArray","length","onSubmit","preventDefault","form","currentTarget","elements","contactName","number","contactNumber","some","contact","alert","concat","addContactThunk","required","Filter","Loader","toLowerCase","includes","map","onClick","contactId","id","deleteContactThunk"],"sourceRoot":""}